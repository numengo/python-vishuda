{
  "$id": "https://numengo.org/vishuda#",
  "type": "object",
  "$comment": "automatically generated for vishuda",
  "$defs": {
    "datasets": {
      "type": "object",
      "$defs": {
        "NdArray": {
          "type": "object",
          "description": "This object represents a numpy nd-array",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
          ],
          "additionalProperties": true,
          "required": [
            "data"
          ],
          "wraps": "numpy.ndarray",
          "properties": {
            "data": true,
            "dtype": {
              "type": "string",
              "description": "The desired data-type for the array.  If not given, then the type will be determined as the minimum type required to hold the objects in the sequence."
            },
            "copy": {
              "type": "boolean",
              "description": "If true (default), then the object is copied.  Otherwise, a copy will only be made if __array__ returns a copy, if obj is a nested sequence, or if a copy is needed to satisfy any of the other requirements(`dtype`, `order`, etc.).",
              "default": true
            },
            "order": {
              "type": "string",
              "description": "Specify the memory layout of the array. If object is not an array, the newly created array will be in C order (row major) unless 'F' is specified, in which case it will be in Fortran order (column major). If object is an array the following holds.",
              "enum": [
                "K",
                "A",
                "C",
                "F"
              ]
            },
            "subok": {
              "type": "boolean",
              "description": "If True, then sub-classes will be passed-through, otherwise the returned array will be forced to be a base-class array (default)."
            },
            "ndmin": {
              "type": "integer",
              "description": "Specifies the minimum number of dimensions that the resulting array should have.  Ones will be pre-pended to the shape as needed to meet this requirement."
            },
            "like": {
              "type": "string",
              "description": "Reference object to allow the creation of arrays which are not NumPy arrays. If an array-like passed in as ``like`` supports the ``__array_function__`` protocol, the result will be defined by it. In this case, it ensures the creation of an array object compatible with that passed in via this argument."
            }
          }
        },
        "Index": {
          "type": "object",
          "description": "This object represents a serie for Pandas",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
          ],
          "additionalProperties": true,
          "wraps": "pandas.core.indexes.base.Index",
          "properties": {
            "values": {
              "type": "array"
            }
          }
        },
        "DatetimeIndex": {
          "type": "object",
          "extends": [
            "#/$defs/datasets/$defs/Index"
          ],
          "wraps": "pandas.core.indexes.datetimes.DatetimeIndex"
        },
        "Series": {
          "type": "object",
          "description": "This object represents series for Pandas",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Series"
          ],
          "additionalProperties": true,
          "required": [
            "index"
          ],
          "wraps": "pandas.core.series.Series",
          "properties": {
            "data": true,
            "index": {
              "$ref": "#/$defs/datasets/$defs/Index"
            },
            "dtype": {
              "type": "string",
              "description": "dtype object of the underlying data."
            }
          }
        },
        "TimeSeries": {
          "type": "object",
          "extends": [
            "#/$defs/datasets/$defs/Series"
          ],
          "additionalProperties": true,
          "wraps": "pandas.core.series.Series",
          "properties": {
            "index": {
              "$ref": "#/$defs/datasets/$defs/DatetimeIndex"
            }
          }
        },
        "DataFrame": {
          "type": "object",
          "description": "Two-dimensional size-mutable, potentially heterogeneous tabular data structure with labeled axes (rows and columns).",
          "extends": [
            "#/$defs/datasets/$defs/Series",
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Dataframe"
          ],
          "additionalProperties": true,
          "wraps": "pandas.core.frame.DataFrame",
          "properties": {
            "data": true,
            "index": {
              "$ref": "#/$defs/datasets/$defs/Index"
            },
            "columns": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/$defs/datasets/$defs/Series"
              }
            }
          }
        }
      }
    },
    "i18n": {
      "type": "object",
      "description": "This is a mixin for classes that require multlingual support",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "Translation language code",
          "enum": [
            "zh",
            "es",
            "ar",
            "fr",
            "pt",
            "id",
            "ur",
            "bn",
            "ru",
            "ja",
            "fa",
            "am",
            "tl",
            "de",
            "vi",
            "tr",
            "ko",
            "th",
            "it",
            "zu",
            "sw",
            "my",
            "uk",
            "pl",
            "uz",
            "ms",
            "nl",
            "ne",
            "ro",
            "si",
            "kk",
            "ny",
            "km",
            "so",
            "rw",
            "el",
            "ht",
            "cu",
            "cs",
            "sv",
            "az",
            "hu",
            "be",
            "tg",
            "he",
            "sr",
            "lo",
            "bg",
            "ky",
            "tk",
            "da",
            "cmn",
            "fi",
            "sk",
            "no",
            "sq",
            "hr",
            "ka",
            "bs",
            "mn",
            "hy",
            "lt",
            "mk",
            "sl",
            "lv",
            "et",
            "tet",
            "dz",
            "lb",
            "dv",
            "mt",
            "is",
            "bi",
            "sm",
            "to",
            "ca",
            "mh",
            "fil",
            "kl",
            "fo",
            "pau",
            "wls",
            "na",
            "tvl",
            "niu",
            "tkl",
            "la",
            "aa"
          ]
        }
      },
      "$defs": {
        "LocaleDirDomains": {
          "type": "object",
          "properties": {
            "locale_dir": {
              "type": "path"
            },
            "domains": {
              "type": "array"
            }
          }
        },
        "Translations": {
          "type": "object",
          "properties": {
            "locale_dirs": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/i18n/$defs/LocaleDirDomains"
              }
            },
            "languages": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/i18n/properties/languageCode"
              }
            },
            "all": {
              "type": "boolean"
            },
            "fallback": {
              "type": "boolean"
            },
            "codeset": {
              "type": "string"
            }
          }
        },
        "Translatable": {
          "type": "object",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
          ],
          "aliases": {
            "text": "msgid"
          },
          "properties": {
            "domain": {
              "type": "string"
            },
            "language": {
              "$ref": "#/$defs/i18n/properties/languageCode"
            },
            "msgid": {
              "type": "string"
            }
          }
        },
        "Translation": {
          "type": "object",
          "extends": [
            "#/$defs/i18n/$defs/Translatable"
          ],
          "aliases": {
            "text": "msgstr"
          },
          "properties": {
            "language": {
              "$ref": "#/$defs/i18n/properties/languageCode"
            },
            "msgstr": {
              "type": "string"
            }
          }
        },
        "TranslatableMixin": {
          "type": "object",
          "extends": [
            "#/$defs/i18n/$defs/Translatable"
          ],
          "abstract": true,
          "properties": {
            "multilingual": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/i18n/$defs/Translation"
              }
            },
            "additionalProperties": true
          }
        },
        "TranslationMixin": {
          "type": "object",
          "abstract": true,
          "notSerialized": [
            "translatedFields",
            "language"
          ],
          "properties": {
            "translatedFields": {
              "type": "array"
            },
            "language": {
              "$ref": "#/$defs/i18n/properties/languageCode"
            }
          }
        }
      }
    },
    "ical": {
      "type": "object",
      "$defs": {
        "Event": {
          "type": "object",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
          ],
          "aliases": {
            "item_attendee": "ATTENDEE",
            "item_class": "CLASS",
            "item_created": "CREATED",
            "item_description": "DESCRIPTION",
            "item_end_datetime": "DTEND",
            "item_exdate": "EXDATE",
            "item_geolocation": "GEO",
            "item_guid": "UID",
            "item_link": "URL",
            "item_location": "LOCATION",
            "item_organizer": "ORGANIZER",
            "item_rdate": "RDATE",
            "item_rrule": "RRULE",
            "item_start_datetime": "DTSTART",
            "item_status": "STATUS",
            "item_title": "SUMMARY",
            "item_transparency": "TRANSP",
            "item_updateddate": "LAST-MODIFIED",
            "item_valarm": "VALARM"
          },
          "required": [
            "UID",
            "DTSTAMP"
          ],
          "wraps": "icalendar.cal.Event",
          "properties": {
            "UID": {
              "type": "string",
              "description": "The event’s unique id. This id should be globally unique so you should add an @DOMAIN_NAME to your id."
            },
            "DTSTAMP": {
              "type": "datetime"
            },
            "CLASS": {
              "type": "string",
              "description": "The event class (e.g. PUBLIC, PRIVATE, CONFIDENTIAL)"
            },
            "CREATED": {
              "type": "datetime",
              "description": "The event create time"
            },
            "DESCRIPTION": {
              "type": "string",
              "description": "The event description"
            },
            "DTSTART": {
              "type": "datetime",
              "description": "The event start time"
            },
            "GEO": {
              "type": "string",
              "description": "The latitude and longitude of the event. The value returned by this property should be a two-tuple containing the latitude and longitude as float values. semicolon. Ex: (37.386013, -122.082932)"
            },
            "LAST-MODIFIED": {
              "type": "datetime",
              "description": "The event modified time"
            },
            "LOCATION": {
              "type": "string",
              "description": "The event location"
            },
            "ORGANIZER": {
              "type": "string",
              "description": "The event organizer. Expected to be a vCalAddress object. See iCalendar documentation or tests to know how to build them."
            },
            "PRIORITY": {
              "type": "integer"
            },
            "SEQUENCE": {
              "type": "integer"
            },
            "STATUS": {
              "type": "string",
              "description": "The status of an event. Can be CONFIRMED, CANCELLED or TENTATIVE.",
              "enum": [
                "CONFIRMED",
                "CANCELLED",
                "TENTATIVE"
              ]
            },
            "SUMMARY": {
              "type": "string",
              "description": "The event name/title"
            },
            "TRANSP": {
              "type": "string",
              "description": "The event transparency. Defines whether the event shows up in busy searches. (e.g. OPAQUE, TRANSPARENT)"
            },
            "URL": {
              "type": "uri",
              "description": "The event url"
            },
            "RECURRENCE-ID": {
              "type": "datetime"
            },
            "DTEND": {
              "type": "string",
              "description": "The event end time"
            },
            "DURATION": {
              "type": "integer"
            },
            "CATEGORIES": {
              "type": "string"
            },
            "ATTACH": {
              "type": "array"
            },
            "ATTENDEE": {
              "type": "array",
              "description": "The event attendees. Expected to be a list of vCalAddress objects. See iCalendar documentation or tests to know how to build them."
            },
            "COMMENT": {
              "type": "array"
            },
            "CONTACT": {
              "type": "array"
            },
            "EXDATE": {
              "type": "array",
              "description": "The dates/times for exceptions of a recurring event. See iCalendar documentation or tests to know how to build them.",
              "items": {
                "type": "datetime"
              }
            },
            "RSTATUS": {
              "type": "array"
            },
            "RELATED": {
              "type": "array"
            },
            "RESOURCES": {
              "type": "array"
            },
            "RDATE": {
              "type": "array",
              "description": "The recurring dates/times for a repeating event. See iCalendar documentation or tests to know how to build them.",
              "items": {
                "type": "datetime"
              }
            },
            "RRULE": {
              "type": "array",
              "description": "The recurrence rule for repeating events. See iCalendar documentation or tests to know how to build them."
            },
            "VALARM": {
              "type": "array",
              "description": "Alarms for the event, must be a list of Alarm objects. See iCalendar documentation or tests to know how to build them.",
              "items": {
                "$ref": "#/$defs/ical/$defs/Alarm"
              }
            },
            "schema_org": {
              "$ref": "https://schema.org/#/$defs/Event"
            }
          }
        },
        "Todo": {
          "type": "object",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
          ],
          "required": [
            "UID",
            "DTSTAMP"
          ],
          "wraps": "icalendar.cal.Todo",
          "properties": {
            "UID": {
              "type": "string"
            },
            "DTSTAMP": {
              "type": "datetime"
            },
            "CLASS": {
              "type": "string"
            },
            "COMPLETED": {
              "type": "string"
            },
            "CREATED": {
              "type": "datetime"
            },
            "DESCRIPTION": {
              "type": "string"
            },
            "DTSTART": {
              "type": "datetime"
            },
            "GEO": {
              "type": "string"
            },
            "LAST-MODIFIED": {
              "type": "datetime"
            },
            "LOCATION": {
              "type": "string"
            },
            "ORGANIZER": {
              "type": "string"
            },
            "PERCENT-COMPLETE": {
              "type": "string"
            },
            "PRIORITY": {
              "type": "string"
            },
            "RECURRENCE-ID": {
              "type": "datetime"
            },
            "SEQUENCE": {
              "type": "string"
            },
            "STATUS": {
              "type": "string"
            },
            "SUMMARY": {
              "type": "string"
            },
            "URL": {
              "type": "uri"
            },
            "DUE": {
              "type": "string"
            },
            "DURATION": {
              "type": "string"
            },
            "ATTACH": {
              "type": "array"
            },
            "ATTENDEE": {
              "type": "array"
            },
            "CATEGORIES": {
              "type": "array"
            },
            "COMMENT": {
              "type": "array"
            },
            "CONTACT": {
              "type": "array"
            },
            "EXDATE": {
              "type": "array"
            },
            "RSTATUS": {
              "type": "array"
            },
            "RELATED": {
              "type": "array"
            },
            "RESOURCES": {
              "type": "array"
            },
            "RDATE": {
              "type": "array"
            },
            "RRULE": {
              "type": "array"
            }
          }
        },
        "Journal": {
          "type": "object",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
          ],
          "required": [
            "UID",
            "DTSTAMP"
          ],
          "wraps": "icalendar.cal.Journal",
          "properties": {
            "UID": {
              "type": "string"
            },
            "DTSTAMP": {
              "type": "string"
            },
            "CLASS": {
              "type": "string"
            },
            "CREATED": {
              "type": "string"
            },
            "DTSTART": {
              "type": "string"
            },
            "LAST-MODIFIED": {
              "type": "string"
            },
            "ORGANIZER": {
              "type": "string"
            },
            "RECURRENCE-ID": {
              "type": "string"
            },
            "SEQUENCE": {
              "type": "string"
            },
            "STATUS": {
              "type": "string"
            },
            "SUMMARY": {
              "type": "string"
            },
            "URL": {
              "type": "string"
            },
            "ATTACH": {
              "type": "array"
            },
            "ATTENDEE": {
              "type": "array"
            },
            "CATEGORIES": {
              "type": "array"
            },
            "COMMENT": {
              "type": "array"
            },
            "CONTACT": {
              "type": "array"
            },
            "EXDATE": {
              "type": "array"
            },
            "RELATED": {
              "type": "array"
            },
            "RDATE": {
              "type": "array"
            },
            "RRULE": {
              "type": "array"
            },
            "RSTATUS": {
              "type": "array"
            },
            "DESCRIPTION": {
              "type": "array"
            }
          }
        },
        "FreeBusy": {
          "type": "object",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
          ],
          "required": [
            "UID",
            "DTSTAMP"
          ],
          "wraps": "icalendar.cal.FreeBusy",
          "properties": {
            "UID": {
              "type": "string"
            },
            "DTSTAMP": {
              "type": "string"
            },
            "CONTACT": {
              "type": "string"
            },
            "DTSTART": {
              "type": "string"
            },
            "DTEND": {
              "type": "string"
            },
            "ORGANIZER": {
              "type": "string"
            },
            "URL": {
              "type": "string"
            },
            "ATTENDEE": {
              "type": "array"
            },
            "COMMENT": {
              "type": "array"
            },
            "FREEBUSY": {
              "type": "array"
            },
            "RSTATUS": {
              "type": "array"
            }
          }
        },
        "Timezone": {
          "type": "object",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
          ],
          "required": [
            "TZID"
          ],
          "wraps": "icalendar.cal.Timezone",
          "properties": {
            "TZID": {
              "type": "string"
            },
            "LAST-MODIFIED": {
              "type": "string"
            },
            "TZURL": {
              "type": "string"
            }
          }
        },
        "Alarm": {
          "type": "object",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
          ],
          "required": [
            "ACTION",
            "TRIGGER"
          ],
          "wraps": "icalendar.cal.Alarm",
          "properties": {
            "ACTION": {
              "type": "string"
            },
            "TRIGGER": {
              "type": "string"
            },
            "SUMMARY": {
              "type": "string"
            },
            "DESCRIPTION": {
              "type": "string"
            },
            "DURATION": {
              "type": "string"
            },
            "REPEAT": {
              "type": "string"
            },
            "ATTENDEE": {
              "type": "array"
            },
            "ATTACH": {
              "type": "array"
            }
          }
        },
        "Calendar": {
          "type": "object",
          "description": "This is the base object for an iCalendar file.",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
          ],
          "aliases": {
            "method": "METHOD",
            "product_id": "PRODID",
            "timezone": "X-WR-TIMEZONE"
          },
          "required": [
            "PRODID",
            "VERSION"
          ],
          "wraps": "icalendar.cal.Calendar",
          "properties": {
            "PRODID": {
              "type": "string",
              "description": "The calendar product ID"
            },
            "VERSION": {
              "type": "string"
            },
            "CALSCALE": {
              "type": "string"
            },
            "METHOD": {
              "type": "string",
              "description": "The calendar method such as meeting requests."
            },
            "X-WR-TIMEZONE": {
              "type": "string",
              "description": "The calendar timezone"
            },
            "X-WR-CALNAME": {
              "type": "string",
              "description": "The calendar name/title"
            }
          }
        }
      }
    },
    "emojis": {
      "type": "object",
      "$defs": {
        "Emoji": {
          "type": "object",
          "extends": [
            "#/$defs/i18n/$defs/Translatable"
          ],
          "primaryKeys": [
            "emoji"
          ],
          "_type": "string",
          "properties": {
            "emoji": {
              "type": "string"
            },
            "language": {
              "type": "string",
              "default": "alias"
            },
            "variant": {
              "type": "string"
            }
          }
        },
        "EmojiCategory": {
          "type": "object",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
          ],
          "primaryKeys": [
            "name"
          ],
          "$defs": {
            "food_drink": {
              "type": "object",
              "extends": [
                "#/$defs/emojis/$defs/EmojiCategory"
              ],
              "$defs": {
                "food_asian": {
                  "type": "object",
                  "extends": [
                    "#/$defs/food_drink"
                  ]
                },
                "food_prepared": {
                  "type": "object",
                  "extends": [
                    "#/$defs/food_drink"
                  ]
                },
                "food_fruit": {
                  "type": "object",
                  "extends": [
                    "#/$defs/food_drink"
                  ]
                },
                "drink": {
                  "type": "object",
                  "extends": [
                    "#/$defs/food_drink"
                  ]
                },
                "dishware": {
                  "type": "object",
                  "extends": [
                    "#/$defs/food_drink"
                  ]
                },
                "food_vegetable": {
                  "type": "object",
                  "extends": [
                    "#/$defs/food_drink"
                  ]
                },
                "food_sweet": {
                  "type": "object",
                  "extends": [
                    "#/$defs/food_drink"
                  ]
                },
                "food_marine": {
                  "type": "object",
                  "extends": [
                    "#/$defs/food_drink"
                  ]
                }
              }
            },
            "flags": {
              "type": "object",
              "extends": [
                "#/$defs/emojis/$defs/EmojiCategory"
              ],
              "$defs": {
                "flag": {
                  "type": "object",
                  "extends": [
                    "#/$defs/flags"
                  ]
                },
                "subdivision_flag": {
                  "type": "object",
                  "extends": [
                    "#/$defs/flags"
                  ]
                },
                "country_flag": {
                  "type": "object",
                  "extends": [
                    "#/$defs/flags"
                  ]
                }
              }
            },
            "travel_places": {
              "type": "object",
              "extends": [
                "#/$defs/emojis/$defs/EmojiCategory"
              ],
              "$defs": {
                "time": {
                  "type": "object",
                  "extends": [
                    "#/$defs/travel_places"
                  ]
                },
                "place_geographic": {
                  "type": "object",
                  "extends": [
                    "#/$defs/travel_places"
                  ]
                },
                "place_map": {
                  "type": "object",
                  "extends": [
                    "#/$defs/travel_places"
                  ]
                },
                "place_building": {
                  "type": "object",
                  "extends": [
                    "#/$defs/travel_places"
                  ]
                },
                "sky_weather": {
                  "type": "object",
                  "extends": [
                    "#/$defs/travel_places"
                  ]
                },
                "transport_air": {
                  "type": "object",
                  "extends": [
                    "#/$defs/travel_places"
                  ]
                },
                "transport_ground": {
                  "type": "object",
                  "extends": [
                    "#/$defs/travel_places"
                  ]
                },
                "transport_water": {
                  "type": "object",
                  "extends": [
                    "#/$defs/travel_places"
                  ]
                },
                "place_other": {
                  "type": "object",
                  "extends": [
                    "#/$defs/travel_places"
                  ]
                },
                "hotel": {
                  "type": "object",
                  "extends": [
                    "#/$defs/travel_places"
                  ]
                },
                "place_religious": {
                  "type": "object",
                  "extends": [
                    "#/$defs/travel_places"
                  ]
                }
              }
            },
            "people_body": {
              "type": "object",
              "extends": [
                "#/$defs/emojis/$defs/EmojiCategory"
              ],
              "$defs": {
                "hands": {
                  "type": "object",
                  "extends": [
                    "#/$defs/people_body"
                  ]
                },
                "person": {
                  "type": "object",
                  "extends": [
                    "#/$defs/people_body"
                  ]
                },
                "person_fantasy": {
                  "type": "object",
                  "extends": [
                    "#/$defs/people_body"
                  ]
                },
                "hand_fingers_partial": {
                  "type": "object",
                  "extends": [
                    "#/$defs/people_body"
                  ]
                },
                "hand_fingers_closed": {
                  "type": "object",
                  "extends": [
                    "#/$defs/people_body"
                  ]
                },
                "person_gesture": {
                  "type": "object",
                  "extends": [
                    "#/$defs/people_body"
                  ]
                },
                "person_sport": {
                  "type": "object",
                  "extends": [
                    "#/$defs/people_body"
                  ]
                },
                "hand_single_finger": {
                  "type": "object",
                  "extends": [
                    "#/$defs/people_body"
                  ]
                },
                "person_activity": {
                  "type": "object",
                  "extends": [
                    "#/$defs/people_body"
                  ]
                },
                "person_symbol": {
                  "type": "object",
                  "extends": [
                    "#/$defs/people_body"
                  ]
                },
                "person_resting": {
                  "type": "object",
                  "extends": [
                    "#/$defs/people_body"
                  ]
                },
                "body_parts": {
                  "type": "object",
                  "extends": [
                    "#/$defs/people_body"
                  ]
                },
                "family": {
                  "type": "object",
                  "extends": [
                    "#/$defs/people_body"
                  ]
                },
                "hand_fingers_open": {
                  "type": "object",
                  "extends": [
                    "#/$defs/people_body"
                  ]
                },
                "hand_prop": {
                  "type": "object",
                  "extends": [
                    "#/$defs/people_body"
                  ]
                },
                "person_role": {
                  "type": "object",
                  "extends": [
                    "#/$defs/people_body"
                  ]
                }
              }
            },
            "objects": {
              "type": "object",
              "extends": [
                "#/$defs/emojis/$defs/EmojiCategory"
              ],
              "$defs": {
                "clothing": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                },
                "mail": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                },
                "sound": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                },
                "phone": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                },
                "office": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                },
                "book_paper": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                },
                "writing": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                },
                "other_object": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                },
                "money": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                },
                "computer": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                },
                "music": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                },
                "musical_instrument": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                },
                "household": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                },
                "lock": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                },
                "science": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                },
                "light_video": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                },
                "medical": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                },
                "tool": {
                  "type": "object",
                  "extends": [
                    "#/$defs/objects"
                  ]
                }
              }
            },
            "component": {
              "type": "object",
              "extends": [
                "#/$defs/emojis/$defs/EmojiCategory"
              ],
              "$defs": {
                "skin_tone": {
                  "type": "object",
                  "extends": [
                    "#/$defs/component"
                  ]
                },
                "hair_style": {
                  "type": "object",
                  "extends": [
                    "#/$defs/component"
                  ]
                }
              }
            },
            "animals_nature": {
              "type": "object",
              "extends": [
                "#/$defs/emojis/$defs/EmojiCategory"
              ],
              "$defs": {
                "animal_amphibian": {
                  "type": "object",
                  "extends": [
                    "#/$defs/animals_nature"
                  ]
                },
                "animal_bird": {
                  "type": "object",
                  "extends": [
                    "#/$defs/animals_nature"
                  ]
                },
                "animal_marine": {
                  "type": "object",
                  "extends": [
                    "#/$defs/animals_nature"
                  ]
                },
                "plant_other": {
                  "type": "object",
                  "extends": [
                    "#/$defs/animals_nature"
                  ]
                },
                "plant_flower": {
                  "type": "object",
                  "extends": [
                    "#/$defs/animals_nature"
                  ]
                },
                "animal_reptile": {
                  "type": "object",
                  "extends": [
                    "#/$defs/animals_nature"
                  ]
                },
                "animal_bug": {
                  "type": "object",
                  "extends": [
                    "#/$defs/animals_nature"
                  ]
                },
                "animal_mammal": {
                  "type": "object",
                  "extends": [
                    "#/$defs/animals_nature"
                  ]
                }
              }
            },
            "smileys_emotion": {
              "type": "object",
              "extends": [
                "#/$defs/emojis/$defs/EmojiCategory"
              ],
              "$defs": {
                "cat_face": {
                  "type": "object",
                  "extends": [
                    "#/$defs/smileys_emotion"
                  ]
                },
                "face_sleepy": {
                  "type": "object",
                  "extends": [
                    "#/$defs/smileys_emotion"
                  ]
                },
                "face_smiling": {
                  "type": "object",
                  "extends": [
                    "#/$defs/smileys_emotion"
                  ]
                },
                "face_affection": {
                  "type": "object",
                  "extends": [
                    "#/$defs/smileys_emotion"
                  ]
                },
                "face_tongue": {
                  "type": "object",
                  "extends": [
                    "#/$defs/smileys_emotion"
                  ]
                },
                "face_concerned": {
                  "type": "object",
                  "extends": [
                    "#/$defs/smileys_emotion"
                  ]
                },
                "face_unwell": {
                  "type": "object",
                  "extends": [
                    "#/$defs/smileys_emotion"
                  ]
                },
                "face_costume": {
                  "type": "object",
                  "extends": [
                    "#/$defs/smileys_emotion"
                  ]
                },
                "face_negative": {
                  "type": "object",
                  "extends": [
                    "#/$defs/smileys_emotion"
                  ]
                },
                "face_hat": {
                  "type": "object",
                  "extends": [
                    "#/$defs/smileys_emotion"
                  ]
                },
                "monkey_face": {
                  "type": "object",
                  "extends": [
                    "#/$defs/smileys_emotion"
                  ]
                },
                "emotion": {
                  "type": "object",
                  "extends": [
                    "#/$defs/smileys_emotion"
                  ]
                },
                "face_hand": {
                  "type": "object",
                  "extends": [
                    "#/$defs/smileys_emotion"
                  ]
                },
                "face_neutral_skeptical": {
                  "type": "object",
                  "extends": [
                    "#/$defs/smileys_emotion"
                  ]
                },
                "face_glasses": {
                  "type": "object",
                  "extends": [
                    "#/$defs/smileys_emotion"
                  ]
                }
              }
            },
            "symbols": {
              "type": "object",
              "extends": [
                "#/$defs/emojis/$defs/EmojiCategory"
              ],
              "$defs": {
                "zodiac": {
                  "type": "object",
                  "extends": [
                    "#/$defs/symbols"
                  ]
                },
                "geometric": {
                  "type": "object",
                  "extends": [
                    "#/$defs/symbols"
                  ]
                },
                "gender": {
                  "type": "object",
                  "extends": [
                    "#/$defs/symbols"
                  ]
                },
                "punctuation": {
                  "type": "object",
                  "extends": [
                    "#/$defs/symbols"
                  ]
                },
                "transport_sign": {
                  "type": "object",
                  "extends": [
                    "#/$defs/symbols"
                  ]
                },
                "arrow": {
                  "type": "object",
                  "extends": [
                    "#/$defs/symbols"
                  ]
                },
                "other_symbol": {
                  "type": "object",
                  "extends": [
                    "#/$defs/symbols"
                  ]
                },
                "warning": {
                  "type": "object",
                  "extends": [
                    "#/$defs/symbols"
                  ]
                },
                "av_symbol": {
                  "type": "object",
                  "extends": [
                    "#/$defs/symbols"
                  ]
                },
                "keycap": {
                  "type": "object",
                  "extends": [
                    "#/$defs/symbols"
                  ]
                },
                "religion": {
                  "type": "object",
                  "extends": [
                    "#/$defs/symbols"
                  ]
                },
                "math": {
                  "type": "object",
                  "extends": [
                    "#/$defs/symbols"
                  ]
                },
                "currency": {
                  "type": "object",
                  "extends": [
                    "#/$defs/symbols"
                  ]
                },
                "alphanum": {
                  "type": "object",
                  "extends": [
                    "#/$defs/symbols"
                  ]
                }
              }
            },
            "activities": {
              "type": "object",
              "extends": [
                "#/$defs/emojis/$defs/EmojiCategory"
              ],
              "$defs": {
                "event": {
                  "type": "object",
                  "extends": [
                    "#/$defs/activities"
                  ]
                },
                "award_medal": {
                  "type": "object",
                  "extends": [
                    "#/$defs/activities"
                  ]
                },
                "game": {
                  "type": "object",
                  "extends": [
                    "#/$defs/activities"
                  ]
                },
                "arts_crafts": {
                  "type": "object",
                  "extends": [
                    "#/$defs/activities"
                  ]
                },
                "sport": {
                  "type": "object",
                  "extends": [
                    "#/$defs/activities"
                  ]
                }
              }
            }
          },
          "properties": {
            "emojis": {
              "$ref": "#/$defs/emojis/$defs/Emoji"
            },
            "categories": {
              "$ref": "#/$defs/emojis/$defs/EmojiCategory"
            }
          }
        },
        "EmojiMixin": {
          "type": "object",
          "abstract": true,
          "notSerialized": [
            "emojis"
          ],
          "properties": {
            "emojis": {
              "type": "array"
            }
          }
        }
      }
    },
    "schema_org": {
      "type": "object",
      "$defs": {
        "SchemaOrg": {
          "type": "object",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance",
            "#/$defs/i18n/$defs/TranslationMixin",
            "#/$defs/emojis/$defs/EmojiMixin"
          ],
          "abstract": true,
          "notSerialized": [
            "schema_org",
            "object2schema_org",
            "as_schema_org"
          ],
          "readOnly": [
            "as_schema_org"
          ],
          "required": [
            "object2schema_org"
          ],
          "properties": {
            "object2schema_org": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            "schema_org": {
              "$ref": "https://schema.org/#/$defs/Thing"
            },
            "as_schema_org": true
          }
        }
      }
    },
    "auth": {
      "type": "object",
      "$defs": {
        "ContentType": {
          "type": "object",
          "description": "This represents associates a typed content to a db model symbol.",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Entity"
          ],
          "primaryKeys": [
            "app_label",
            "model"
          ],
          "properties": {
            "app_label": {
              "type": "string"
            },
            "model": {
              "type": "string",
              "description": "python model class name"
            }
          }
        },
        "Permission": {
          "type": "object",
          "description": "The permissions system provides a way to assign permissions to specific users and groups of users.\n\nThe permission system is used by the Django admin site, but may also be useful in your own code. The Django admin site uses permissions as follows:\n    - The \"add\" permission limits the user's ability to view the \"add\" form\n      and add an object.\n    - The \"change\" permission limits a user's ability to view the change\n      list, view the \"change\" form and change an object.\n    - The \"delete\" permission limits the ability to delete an object.\n    - The \"view\" permission limits the ability to view an object.\n\nPermissions are set globally per type of object, not per specific object instance. It is possible to say \"Mary may change news stories,\" but it's not currently possible to say \"Mary may change news stories, but only the ones she created herself\" or \"Mary may only change news stories that have a certain status or publication date.\"\nThe permissions listed above are automatically created for each model.",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Entity",
            "https://numengo.org/ngoschema#/$defs/metadata/$defs/Name"
          ],
          "primaryKeys": [
            "content_type",
            "codename"
          ],
          "properties": {
            "name": {
              "type": "string"
            },
            "codename": {
              "type": "string"
            },
            "content_type": {
              "$ref": "#/$defs/auth/$defs/ContentType"
            }
          }
        },
        "Group": {
          "type": "object",
          "description": "Groups are a generic way of categorizing users to apply permissions, or some other label, to those users.\nA user can belong to any number of groups. A user in a group automatically has all the permissions granted to that group. For example, if the group 'Site editors' has the permission can_edit_home_page, any user in that group will have that permission.",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Entity",
            "https://numengo.org/ngoschema#/$defs/metadata/$defs/Name"
          ],
          "primaryKeys": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string"
            },
            "permissions": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/auth/$defs/Permission"
              }
            }
          }
        },
        "User": {
          "type": "object",
          "description": "This objects represents a fully featured User model with admin-compliant permissions.",
          "extends": [
            "#/$defs/personas/$defs/Person"
          ],
          "abstract": true,
          "object2schema_org": {
            "email": "email",
            "firstName": "givenName",
            "lastName": "familyName"
          },
          "primaryKeys": [
            "username"
          ],
          "properties": {
            "username": {
              "type": "string",
              "description": "Unique User name, usually email address",
              "default": "{{this.email}}"
            }
          }
        },
        "BankAccount": {
          "type": "object",
          "description": "This objects represents a bank account.",
          "extends": [
            "#/$defs/schema_org/$defs/SchemaOrg"
          ],
          "aliases": {
            "BIC": "swift_bic",
            "IBAN": "iban"
          },
          "object2schema_org": {
            "agency": "provider.department.name",
            "bank_city": "provider.address.addressLocality",
            "bank_name": "provider.name",
            "bank_street": "provider.address.streetAddress",
            "bank_zip": "provider.address.postalCode",
            "holder_name": "audience.name",
            "iban": "alternateName",
            "swift_bic": "identifier"
          },
          "properties": {
            "holder_name": {
              "type": "string",
              "description": "Bank account holder's name"
            },
            "bank_name": {
              "type": "string",
              "description": "Bank's name"
            },
            "bank_street": {
              "type": "string",
              "description": "Bank's street"
            },
            "bank_city": {
              "type": "string",
              "description": "Bank's city"
            },
            "bank_zip": {
              "type": "string",
              "description": "Bank's zip code"
            },
            "agency": {
              "type": "string",
              "description": "Bank agency identifier"
            },
            "swift_bic": {
              "type": "string",
              "description": "SWIFT BIC number"
            },
            "iban": {
              "type": "string",
              "description": "IBAN number"
            },
            "schema_org": {
              "$ref": "https://schema.org/#/$defs/DepositAccount"
            }
          }
        }
      }
    },
    "files": {
      "type": "object",
      "$defs": {
        "definition": {
          "type": "object",
          "$defs": {
            "FileInfo": {
              "type": "object",
              "description": "This object represents file informations.",
              "extends": [
                "https://numengo.org/ngoschema#/$defs/files/$defs/Filepath"
              ],
              "readOnly": [
                "contentSize",
                "contentSizeHuman",
                "mimetype",
                "sha1"
              ],
              "properties": {
                "contentSize": {
                  "type": "integer",
                  "description": "Content size in bytes."
                },
                "contentSizeHuman": {
                  "type": "string",
                  "description": "Content size in human readable units."
                },
                "sha1": {
                  "type": "string",
                  "description": "SHA1 hash of the file."
                },
                "mimetype": {
                  "type": "string",
                  "description": "MIME type of the file"
                },
                "media": {
                  "$ref": "#/$defs/files/$defs/definition/$defs/medias/$defs/MediaFile"
                }
              }
            },
            "FolderInfo": {
              "type": "object",
              "extends": [
                "https://numengo.org/ngoschema#/$defs/files/$defs/Filepath"
              ],
              "readOnly": [
                "files",
                "subfolders",
                "parent"
              ],
              "properties": {
                "recursive": {
                  "type": "boolean"
                },
                "info_files": {
                  "type": "array",
                  "items": {
                    "$ref": "#/$defs/files/$defs/definition/$defs/FileInfo"
                  }
                },
                "info_subfolders": {
                  "type": "array",
                  "items": {
                    "$ref": "#/$defs/files/$defs/definition/$defs/FolderInfo"
                  }
                },
                "parent": {
                  "$ref": "#/$defs/files/$defs/definition/$defs/FolderInfo"
                }
              }
            },
            "medias": {
              "type": "object",
              "$defs": {
                "MediaBaseInfo": {
                  "type": "object",
                  "properties": {
                    "format": {
                      "type": "string"
                    },
                    "codec": {
                      "type": "string"
                    },
                    "long_codec": {
                      "type": "string"
                    }
                  }
                },
                "MediaFile": {
                  "type": "object",
                  "extends": [
                    "https://numengo.org/ngoschema#/$defs/files/$defs/UriFile",
                    "https://numengo.org/ngoschema#/$defs/metadata/$defs/Taggable"
                  ],
                  "binary": true,
                  "properties": {
                    "_type": {
                      "type": "string"
                    },
                    "file_info": {
                      "$ref": "#/$defs/files/$defs/FileInfo"
                    },
                    "schema_org": {
                      "$ref": "https://schema.org/#/$defs/MediaObject"
                    }
                  }
                },
                "AudioTags": {
                  "type": "object",
                  "additionalProperties": true,
                  "properties": {
                    "title": {
                      "type": "array"
                    },
                    "artist": {
                      "type": "array"
                    },
                    "album": {
                      "type": "array"
                    },
                    "year": {
                      "type": "array"
                    },
                    "comment": {
                      "type": "array"
                    },
                    "tracknumber": {
                      "type": "array"
                    },
                    "genre": {
                      "type": "array"
                    },
                    "bpm": {
                      "type": "array"
                    },
                    "composer": {
                      "type": "array"
                    },
                    "url": {
                      "type": "array"
                    }
                  }
                },
                "AudioStreamInfo": {
                  "type": "object",
                  "extends": [
                    "#/$defs/files/$defs/definition/$defs/medias/$defs/MediaBaseInfo"
                  ],
                  "properties": {
                    "duration": {
                      "type": "number"
                    },
                    "bit_depth": {
                      "type": "integer"
                    },
                    "bitrate": {
                      "type": "integer"
                    },
                    "bitrate_mode": {
                      "type": "string",
                      "enum": [
                        "CBR",
                        "ABR",
                        "VBR_METHOD_1",
                        "VBR_METHOD_2",
                        "VBR_METHOD_3",
                        "VBR_METHOD_4",
                        "CBR_2_PASS",
                        "ABR_2_PASS"
                      ]
                    },
                    "channels": {
                      "type": "integer"
                    },
                    "channel_mode": {
                      "type": "string",
                      "enum": [
                        "MONO",
                        "STEREO",
                        "DUAL_CHANNEL",
                        "JOINT_STEREO",
                        "FORCED",
                        "AUTO",
                        "INTENSITY",
                        "UNDEFINED"
                      ]
                    },
                    "layer": {
                      "type": "integer"
                    },
                    "sample_rate": {
                      "type": "integer"
                    },
                    "protected": {
                      "type": "boolean"
                    },
                    "version": {
                      "type": "string"
                    }
                  }
                },
                "AudioFile": {
                  "type": "object",
                  "extends": [
                    "#/$defs/files/$defs/definition/$defs/medias/$defs/MediaFile"
                  ],
                  "_type": "audio",
                  "properties": {
                    "stream_info": {
                      "$ref": "#/$defs/files/$defs/definition/$defs/AudioStreamInfo"
                    },
                    "tags": {
                      "$ref": "#/$defs/files/$defs/definition/$defs/AudioTags"
                    },
                    "schema_org": {
                      "$ref": "https://schema.org/#/$defs/AudioObject"
                    }
                  }
                },
                "ExifInfo": {
                  "type": "object",
                  "additonalProperties": true,
                  "properties": {
                    "alpha_channel": {
                      "type": "string"
                    },
                    "image_width": {
                      "type": "integer"
                    },
                    "photometric_interpretation": {
                      "type": "string"
                    },
                    "is_animated": {
                      "type": "string"
                    },
                    "model": {
                      "type": "string"
                    },
                    "height": {
                      "type": "integer"
                    },
                    "x_resolution": {
                      "type": "string"
                    },
                    "y_resolution": {
                      "type": "string"
                    },
                    "date_time": {
                      "type": "datetime"
                    },
                    "software": {
                      "type": "string"
                    },
                    "bits_per_sample": {
                      "type": "string"
                    },
                    "n_frames": {
                      "type": "string"
                    },
                    "color_space": {
                      "type": "string"
                    },
                    "orientation": {
                      "type": "integer"
                    },
                    "gps_info": {
                      "type": "integer"
                    },
                    "channel": {
                      "type": "string"
                    },
                    "make": {
                      "type": "string"
                    },
                    "exif_offset": {
                      "type": "integer"
                    },
                    "width": {
                      "type": "integer"
                    },
                    "samples_per_pixel": {
                      "type": "integer"
                    },
                    "image_length": {
                      "type": "integer"
                    },
                    "y_cb_cr_positioning": {
                      "type": "integer"
                    },
                    "resolution": {
                      "type": "string"
                    },
                    "resolution_unit": {
                      "type": "string"
                    }
                  }
                },
                "ImageBaseInfo": {
                  "type": "object",
                  "extends": [
                    "#/$defs/files/$defs/definition/$defs/medias/$defs/MediaBaseInfo"
                  ],
                  "properties": {
                    "width": {
                      "type": "integer"
                    },
                    "height": {
                      "type": "integer"
                    },
                    "layers": {
                      "type": "integer"
                    },
                    "n_frames": {
                      "type": "integer"
                    },
                    "bits": {
                      "type": "integer"
                    },
                    "color_space": {
                      "type": "string"
                    }
                  }
                },
                "ImageInfo": {
                  "type": "object",
                  "extends": [
                    "#/$defs/files/$defs/definition/$defs/medias/$defs/ImageBaseInfo"
                  ],
                  "additionalProperties": true,
                  "properties": {
                    "dpi": {
                      "type": "array"
                    },
                    "is_animated": {
                      "type": "boolean"
                    },
                    "color_space": {
                      "type": "string"
                    },
                    "alpha_channel": {
                      "type": "boolean"
                    },
                    "exif": {
                      "$ref": "#/$defs/files/$defs/definition/$defs/ExifInfo"
                    }
                  }
                },
                "ImageFile": {
                  "type": "object",
                  "extends": [
                    "#/$defs/files/$defs/definition/$defs/medias/$defs/MediaFile"
                  ],
                  "_type": "image",
                  "properties": {
                    "image_info": {
                      "$ref": "#/$defs/files/$defs/definition/$defs/ImageInfo"
                    },
                    "schema_org": {
                      "$ref": "https://schema.org/#/$defs/ImageObject"
                    }
                  }
                },
                "VideoInfo": {
                  "type": "object",
                  "extends": [
                    "#/$defs/files/$defs/definition/$defs/medias/$defs/ImageInfo"
                  ],
                  "additionalProperties": true,
                  "aliases": {
                    "video_format": "format"
                  },
                  "properties": {
                    "duration": {
                      "type": "number"
                    },
                    "fps": {
                      "type": "number"
                    },
                    "audio_channels": {
                      "type": "integer"
                    }
                  }
                },
                "VideoFile": {
                  "type": "object",
                  "extends": [
                    "#/$defs/files/$defs/definition/$defs/medias/$defs/MediaFile"
                  ],
                  "_type": "video",
                  "properties": {
                    "video_info": {
                      "$ref": "#/$defs/files/$defs/definition/$defs/VideoInfo"
                    },
                    "schema_org": {
                      "$ref": "https://schema.org/#/$defs/VideoObject"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "places": {
      "type": "object",
      "$defs": {
        "GeoCoordinates": {
          "type": "object",
          "extends": [
            "#/$defs/schema_org/$defs/SchemaOrg"
          ],
          "aliases": {
            "postalCode": "postalAddress.postal_code"
          },
          "dependencies": {
            "country": [
              "addressCountry"
            ],
            "geo": [
              "longitude",
              "latitude",
              "postalCode"
            ],
            "point": [
              "longitude",
              "latitude"
            ],
            "postal": [
              "postalCode"
            ]
          },
          "object2schema_org": {
            "elevation": "elevation",
            "latitude": "latitude",
            "longitude": "longitude",
            "postalCode": "postalCode"
          },
          "readOnly": [
            "country",
            "geo",
            "postal"
          ],
          "required": [
            "postalAddress"
          ],
          "properties": {
            "postalAddress": {
              "$ref": "#/$defs/places/$defs/Address"
            },
            "addressCountry": {
              "type": "string"
            },
            "elevation": {
              "type": "integer"
            },
            "latitude": {
              "type": "integer"
            },
            "longitude": {
              "type": "integer"
            },
            "schema_org": {
              "$ref": "https://schema.org/#/$defs/GeoCoordinates"
            },
            "point": {
              "$ref": "https://numengo.org/ngogeo#/$defs/coordinates/$defs/Point"
            },
            "country": {
              "$ref": "https://numengo.org/ngogeo#/$defs/territories/$defs/Country"
            },
            "territory": {
              "$ref": "https://numengo.org/ngogeo#/$defs/territories/$defs/Territory"
            }
          }
        },
        "Address": {
          "type": "object",
          "description": "This object represents an address following the convention of http://microformats.org/wiki/hcard",
          "extends": [
            "https://json-schema.org/address",
            "#/$defs/schema_org/$defs/SchemaOrg"
          ],
          "aliases": {
            "city": "locality",
            "street": "street-address",
            "zip": "postal-code"
          },
          "dependencies": {
            "country": [
              "country-name"
            ],
            "geo": [
              "postal-code"
            ],
            "postal": [
              "postal-code"
            ]
          },
          "object2schema_org": {
            "country-name": "addressCountry",
            "post-office-box": "postOfficeBoxNumber",
            "postal-code": "postalCode",
            "region": "addressRegion",
            "street-address": "streetAddress"
          },
          "readOnly": [
            "country",
            "geo",
            "postal"
          ],
          "properties": {
            "post-office-box": {
              "type": "string",
              "description": "Post office box description if any"
            },
            "extended-address": {
              "type": "string",
              "description": "Apartment/suite/room name/number if any"
            },
            "street-address": {
              "type": "string",
              "description": "Street number + name, apt/ste"
            },
            "locality": {
              "type": "string",
              "description": "City/town/village"
            },
            "region": {
              "type": "string",
              "description": "State/county/province"
            },
            "postal-code": {
              "type": "string",
              "description": "Postal code, e.g. US ZIP"
            },
            "country-name": {
              "type": "string",
              "description": "Country name"
            },
            "geo": {
              "$ref": "#/$defs/places/$defs/GeoCoordinates"
            },
            "postal": {
              "$ref": "https://numengo.org/ngogeo#/$defs/infos/$defs/PostalInfo"
            },
            "country": {
              "$ref": "https://numengo.org/ngogeo#/$defs/territories/$defs/Country"
            },
            "schema_org": {
              "$ref": "https://schema.org/#/$defs/PostalAddress"
            }
          }
        },
        "Card": {
          "type": "object",
          "description": "This object represent a person, a company, an organization, or a place",
          "extends": [
            "https://json-schema.org/card",
            "#/$defs/schema_org/$defs/SchemaOrg"
          ],
          "abstract": true,
          "aliases": {
            "address": "adr"
          },
          "object2schema_org": {
            "adr": "address",
            "email": "email",
            "fn": "name",
            "tel": "telephone"
          },
          "properties": {
            "adr": {
              "$ref": "#/$defs/places/$defs/Address"
            },
            "extra_addresses": {
              "type": "object",
              "additionalProperties": {
                "$ref": "#/$defs/places/$defs/Address"
              }
            },
            "email": {
              "type": "string",
              "description": "Email address"
            },
            "tel": {
              "type": "string",
              "description": "Telephone number"
            },
            "extra_telephones": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        },
        "Place": {
          "type": "object",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Entity",
            "#/$defs/places/$defs/Card"
          ],
          "additionalProperties": true,
          "aliases": {
            "geo": "address.geo"
          },
          "dependencies": {
            "country": [
              "country-name"
            ],
            "geo": [
              "postal-code"
            ]
          },
          "properties": {
            "faxNumber": {
              "type": "string"
            },
            "branchCode": {
              "type": "string"
            },
            "photo": {
              "type": "string"
            },
            "schema_org": {
              "$ref": "https://schema.org/#/$defs/Place"
            }
          }
        }
      }
    },
    "personas": {
      "type": "object",
      "$defs": {
        "Organization": {
          "type": "object",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Entity",
            "#/$defs/places/$defs/Card"
          ],
          "aliases": {
            "organizationName": "org.organizationName",
            "organizationUnit": "org.organizationUnit"
          },
          "primaryKeys": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer"
            },
            "schema_org": {
              "$ref": "https://schema.org/#/$defs/Organization"
            }
          }
        },
        "Person": {
          "type": "object",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Entity",
            "#/$defs/places/$defs/Card"
          ],
          "aliases": {
            "birthDate": "bday",
            "firstName": "givenName",
            "fullName": "fn",
            "lastName": "familyName"
          },
          "primaryKeys": [
            "id"
          ],
          "properties": {
            "givenName": {
              "type": "string",
              "description": "First Name"
            },
            "familyName": {
              "type": "string",
              "description": "Family (often last) name"
            },
            "fn": {
              "type": "string",
              "description": "Name, formatted/full",
              "default": "{{this.firstName}} {{this.lastName}}"
            },
            "id": {
              "type": "integer"
            },
            "affiliation": {
              "foreignKey": {
                "foreignSchema": "#/$defs/personas/$defs/Organization"
              }
            },
            "bday": {
              "type": "date"
            },
            "birthPlace": {
              "$ref": "#/$defs/places/$defs/Place"
            },
            "schema_org": {
              "$ref": "https://schema.org/#/$defs/Person"
            }
          }
        },
        "Merchant": {
          "type": "object",
          "description": "This objects represents a merchant.",
          "extends": [
            "#/$defs/personas/$defs/Organization"
          ],
          "aliases": {
            "merchant_city": "adr.locality",
            "merchant_name": "fn",
            "merchant_street": "adr.postal-street",
            "merchant_zip": "adr.postal-code"
          },
          "primaryKeys": [
            "id"
          ],
          "properties": {
            "registration_id": {
              "type": "string"
            },
            "registration_city": {
              "type": "string"
            },
            "registration_capital": {
              "type": "string"
            },
            "merchant_tax_id": {
              "type": "string"
            },
            "merchant_vat_id": {
              "type": "string"
            },
            "bank_account": {
              "$ref": "#/$defs/auth/$defs/BankAccount"
            },
            "schema_org": {
              "$ref": "https://schema.org/#/$defs/Organization"
            }
          }
        },
        "Manufacturer": {
          "type": "object",
          "description": "This objects represents a product manufacturer.",
          "extends": [
            "#/$defs/personas/$defs/Organization"
          ]
        },
        "Customer": {
          "type": "object",
          "description": "This objects represents a customer.",
          "extends": [
            "#/$defs/auth/$defs/User"
          ],
          "primaryKeys": [
            "username"
          ],
          "properties": {
            "bank_accounts": {
              "type": "array"
            },
            "payment_cards": {
              "type": "array"
            }
          }
        },
        "BusinessCustomer": {
          "type": "object",
          "extends": [
            "#/$defs/personas/$defs/Customer",
            "#/$defs/personas/$defs/Merchant"
          ],
          "primaryKeys": [
            "username"
          ],
          "properties": {
            "schema_org": {
              "$ref": "https://schema.org/#/$defs/Organization"
            }
          }
        }
      }
    },
    "app": {
      "type": "object",
      "$defs": {
        "Model": {
          "type": "object",
          "description": "This objects represents an app model.",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Entity",
            "#/$defs/i18n/$defs/TranslatableMixin"
          ],
          "abstract": true
        },
        "Fixture": {
          "type": "object",
          "description": "This objects represents an app fixture.",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Entity"
          ],
          "primaryKeys": [
            "canonicalName"
          ],
          "properties": {
            "model": {
              "$ref": "#/$defs/app/$defs/Model"
            },
            "pk": true,
            "fields": {
              "type": "object",
              "description": "Fixture values"
            }
          }
        },
        "View": {
          "type": "object",
          "description": "This objects represents an app view.",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/protocols/$defs/Serializer",
            "#/$defs/i18n/$defs/TranslatableMixin"
          ]
        },
        "Namespace": {
          "type": "object",
          "description": "This objects represents an app namespace.",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
          ],
          "properties": {
            "models": {
              "type": "array",
              "description": "Namespace models",
              "items": {
                "$ref": "#/$defs/app/$defs/Model"
              }
            },
            "fixtures": {
              "type": "array",
              "description": "Namespace fixtures",
              "items": {
                "$ref": "#/$defs/app/$defs/Fixture"
              }
            },
            "views": {
              "type": "array",
              "description": "Namespace views",
              "items": {
                "$ref": "#/$defs/app/$defs/View"
              }
            }
          }
        },
        "EntryPoint": {
          "type": "object",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
          ],
          "required": [
            "symbol"
          ],
          "properties": {
            "symbol": {
              "type": "importable"
            },
            "command_name": {
              "type": "string"
            },
            "name": {
              "type": "string",
              "default": "{{ this.command_name }}"
            },
            "help": {
              "type": "string"
            },
            "emojis": {
              "type": "string"
            },
            "emojis_after": {
              "type": "string"
            }
          }
        },
        "App": {
          "type": "object",
          "description": "This objects represents an app.",
          "extends": [
            "#/$defs/app/$defs/Namespace"
          ],
          "properties": {
            "entry_points": {
              "type": "array",
              "description": "App entry points",
              "items": {
                "$ref": "#/$defs/app/$defs/EntryPoint"
              }
            },
            "languages": {
              "type": "array",
              "description": "App supported language lists",
              "items": {
                "type": "string"
              }
            },
            "telebot": {
              "$ref": "https://numengo.org/telebot#/$defs/Telebot"
            },
            "chatbot": {
              "$ref": "#/$defs/app/$defs/chatbot/$defs/Chatbot"
            }
          }
        },
        "signatures": {
          "type": "object",
          "$defs": {
            "Parameter": {
              "type": "object",
              "extends": [
                "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
              ],
              "properties": {
                "empty": {
                  "type": "boolean"
                },
                "default": {
                  "type": "string"
                },
                "annotation": {
                  "type": "string"
                },
                "kind": {
                  "type": "string",
                  "enum": [
                    "POSITIONAL_ONLY",
                    "POSITIONAL_OR_KEYWORD",
                    "VAR_POSITIONAL",
                    "KEYWORD_ONLY",
                    "VAR_KEYWORD"
                  ]
                }
              }
            },
            "Signature": {
              "type": "object",
              "extends": [
                "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
              ],
              "properties": {
                "parameters": {
                  "type": "array",
                  "items": {
                    "$ref": "#/$defs/app/$defs/signatures/$defs/Parameter"
                  }
                },
                "return_annotation": {
                  "type": "string"
                },
                "empty": {
                  "type": "boolean"
                }
              }
            },
            "BoundArguments": {
              "type": "object",
              "properties": {
                "arguments": {
                  "type": "string"
                },
                "args": {
                  "type": "string"
                },
                "kwargs": {
                  "type": "string"
                },
                "signature": {
                  "$ref": "#/$defs/app/$defs/signatures/$defs/Signature"
                }
              }
            }
          }
        },
        "chatbot": {
          "type": "object",
          "$defs": {
            "Pair": {
              "type": "object",
              "description": "This objects represents a conversational pair.",
              "required": [
                "pattern"
              ],
              "properties": {
                "pattern": {
                  "type": "string",
                  "rawLiterals": true
                },
                "responses": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "rawLiterals": true
                  }
                },
                "tag": {
                  "type": "string"
                },
                "context_set": {
                  "type": "object"
                }
              }
            },
            "Chatbot": {
              "type": "object",
              "description": "This objects represents a conversational NLTK chatbot",
              "required": [
                "pairs"
              ],
              "properties": {
                "chatbot_name": {
                  "type": "string"
                },
                "pairs": {
                  "type": "array",
                  "description": "List of patterns and responses.",
                  "items": {
                    "$ref": "#/$defs/app/$defs/chatbot/$defs/Pair"
                  }
                },
                "reflections": {
                  "type": "object",
                  "description": "Mapping between first and second person expressions",
                  "additionalProperties": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
