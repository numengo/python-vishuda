{
  "$id": "https://numengo.org/telebot#",
  "type": "object",
  "$comment": "automatically generated for telebot",
  "description": "This objects represents a Telegram bot. It allows you to add handlers for different kind of updates.",
  "$defs": {
    "TelebotInstance": {
      "type": "object",
      "extends": [
        "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
      ],
      "notSerialized": [
        "_parentEntryPoint",
        "_telebot"
      ],
      "notValidated": [
        "_parentEntryPoint",
        "_telebot"
      ],
      "properties": {
        "_parentEntryPoint": true,
        "_telebot": true
      }
    },
    "DeepLink": {
      "type": "object",
      "extends": [
        "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
      ],
      "dependencies": {
        "link": [
          "url",
          "link_text"
        ],
        "url": [
          "bot_username",
          "payload",
          "group"
        ]
      },
      "properties": {
        "bot_username": {
          "type": "string"
        },
        "payload": {
          "type": "string",
          "default": "{{this.name}}"
        },
        "group": {
          "type": "boolean"
        },
        "link_text": {
          "type": "string",
          "default": "{{this.name}}"
        },
        "url": {
          "type": "uri"
        },
        "link": {
          "type": "string"
        }
      }
    },
    "Routeur": {
      "type": "object",
      "extends": [
        "#/$defs/TelebotInstance"
      ],
      "properties": {
        "include_routeurs": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Routeur"
          }
        }
      }
    },
    "Triggers": {
      "type": "object",
      "properties": {
        "command": {
          "$ref": "#/$defs/handlers/$defs/CommandHandler"
        },
        "message": {
          "$ref": "#/$defs/handlers/$defs/MessageHandler"
        },
        "edited_message": {
          "$ref": "#/$defs/handlers/$defs/Handler"
        },
        "channel_post": {
          "$ref": "#/$defs/handlers/$defs/Handler"
        },
        "edited_channel_post": {
          "$ref": "#/$defs/handlers/$defs/Handler"
        },
        "inline_query": {
          "$ref": "#/$defs/handlers/$defs/InlineQueryHandler"
        },
        "chosen_inline_result": {
          "$ref": "#/$defs/handlers/$defs/Handler"
        },
        "callback_query": {
          "$ref": "#/$defs/handlers/$defs/CallbackQueryHandler"
        },
        "shipping_query": {
          "$ref": "#/$defs/handlers/$defs/Handler"
        },
        "pre_checkout_query": {
          "$ref": "#/$defs/handlers/$defs/Handler"
        },
        "poll": {
          "$ref": "#/$defs/handlers/$defs/Handler"
        },
        "poll_answer": {
          "$ref": "#/$defs/handlers/$defs/Handler"
        },
        "my_chat_member": {
          "$ref": "#/$defs/handlers/$defs/Handler"
        },
        "chat_member": {
          "$ref": "#/$defs/handlers/$defs/Handler"
        }
      }
    },
    "Middleware": {
      "type": "object",
      "properties": {
        "handler": {
          "$ref": "#/$defs/handlers/$defs/Handler"
        },
        "event": {
          "type": "string"
        },
        "data": true
      }
    },
    "State": {
      "type": "object",
      "extends": [
        "#/$defs/TelebotInstance"
      ],
      "aliases": {
        "default": "defaultValue",
        "key": "state_full_name",
        "label": "state_name"
      },
      "readOnly": [
        "state_name",
        "key_name"
      ],
      "properties": {
        "required": {
          "type": "boolean"
        },
        "defaultValue": true,
        "getter": {
          "$ref": "#/$defs/dialog/$defs/callables/$defs/DataGetter"
        },
        "selector": {
          "$ref": "#/$defs/dialog/$defs/callables/$defs/Callback"
        },
        "state_name": {
          "type": "string",
          "default": "{{ this.name | upper }}"
        },
        "state_full_name": {
          "type": "string"
        },
        "key_name": {
          "type": "string",
          "default": "{{ this.state_name }}_KEY"
        }
      }
    },
    "StatesGroup": {
      "type": "object",
      "extends": [
        "#/$defs/TelebotInstance"
      ],
      "dependencies": {
        "states": [
          "states_group_name"
        ]
      },
      "properties": {
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/State"
          }
        },
        "states_group_name": {
          "type": "string",
          "default": "{{ this.name | camelize }}"
        }
      }
    },
    "BotConfig": {
      "type": "object",
      "properties": {
        "admin_ids": {
          "type": "array"
        }
      }
    },
    "Enums": {
      "type": "object",
      "properties": {
        "content_type_media": {
          "type": "string",
          "enum": [
            "text",
            "audio",
            "animatio",
            "document",
            "photo",
            "sticker",
            "video",
            "video_no",
            "voice",
            "contact",
            "dice",
            "poll",
            "venue",
            "location"
          ]
        },
        "content_type_service": {
          "type": "string",
          "enum": [
            "new_chat_members",
            "left_chat_member",
            "new_chat_title",
            "new_chat_photo",
            "delete_chat_photo",
            "group_chat_created",
            "supergroup_chat_created",
            "channel_chat_created",
            "migrate_to_chat_id",
            "migrate_from_chat_id",
            "pinned_message",
            "proximity_alert_triggered",
            "voice_chat_scheduled",
            "voice_chat_started",
            "voice_chat_ended",
            "voice_chat_participants_invited",
            "message_auto_delete_timer_changed"
          ]
        },
        "update_types": {
          "type": "string",
          "enum": [
            "message",
            "edited_message",
            "channel_post",
            "edited_channel_post",
            "inline_query",
            "chosen_inline_result",
            "callback_query",
            "shipping_query",
            "pre_checkout_query",
            "poll",
            "poll_answer",
            "my_chat_member",
            "chat_member",
            "update_id"
          ]
        },
        "text_widget_types": {
          "type": "string",
          "enum": [
            "const",
            "format",
            "i18n_format",
            "multi",
            "case",
            "progress",
            "list",
            "jinja"
          ]
        },
        "keyboard_widget_types": {
          "type": "string",
          "enum": [
            "button",
            "url",
            "web_app",
            "switchInline_query",
            "group",
            "row",
            "column",
            "scrolling_group",
            "list_group",
            "checkbox",
            "select",
            "radio",
            "multiselect",
            "calendar",
            "counter",
            "switch_to",
            "next",
            "back",
            "start",
            "cancel"
          ]
        },
        "input_widget_types": {
          "type": "string",
          "enum": [
            "message_input",
            "text_input"
          ]
        },
        "media_widget_types": {
          "type": "string",
          "enum": [
            "static_media",
            "dynamic_media"
          ]
        },
        "dialog_launch_mode": {
          "type": "string",
          "enum": [
            "standard",
            "root",
            "exclusive",
            "single_top"
          ]
        },
        "dialog_show_mode": {
          "type": "string",
          "enum": [
            "auto",
            "edit",
            "send",
            "delete_and_send",
            "no_update"
          ]
        },
        "dialog_start_mode": {
          "type": "string",
          "enum": [
            "normal",
            "reset_stack",
            "new_stack"
          ]
        }
      }
    },
    "EntryPoint": {
      "type": "object",
      "extends": [
        "https://numengo.org/vishuda#/$defs/app/$defs/EntryPoint",
        "#/$defs/TelebotInstance"
      ],
      "notSerialized": [
        "all_states_groups",
        "main_state",
        "inner_states_groups",
        "states_group",
        "dialog",
        "menu_window",
        "all_windows",
        "states_setters_windows",
        "states_setters_btns",
        "entry_points_btns",
        "menu_window",
        "menu_btn",
        "menu_back",
        "all_callbacks"
      ],
      "properties": {
        "routeur": {
          "type": "string",
          "description": "routeur name",
          "default": "{{this.name}}_routeur"
        },
        "actions": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/actions/$defs/Action"
          }
        },
        "callbacks": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/dialog/$defs/callables/$defs/Callback"
          }
        },
        "filters": {
          "type": "array",
          "items": true
        },
        "middlewares": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/Middleware"
          }
        },
        "menu_text": {
          "type": "tokens"
        },
        "widgets": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/dialog/$defs/widgets/$defs/Widget"
          }
        },
        "windows": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/dialog/$defs/Window"
          }
        },
        "states": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/State"
          }
        },
        "states_groups": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/StatesGroup"
          }
        },
        "dialog": {
          "$ref": "#/$defs/dialog/$defs/Dialog"
        }
      }
    },
    "Telebot": {
      "type": "object",
      "extends": [
        "https://numengo.org/vishuda#/$defs/app/$defs/App"
      ],
      "additionalProperties": true,
      "aliases": {
        "plugins": "entry_points"
      },
      "notSerialized": [
        "token"
      ],
      "required": [
        "token",
        "telebot_name"
      ],
      "properties": {
        "telebot_name": {
          "type": "string",
          "description": "Bot name"
        },
        "token": {
          "type": "string",
          "description": "bot API token"
        },
        "threaded": {
          "type": "boolean"
        },
        "num_threads": {
          "type": "integer",
          "default": 2
        },
        "bot": {
          "type": "string"
        },
        "updater": {
          "type": "string"
        },
        "main_entry_point": {
          "$ref": "#/$defs/EntryPoint"
        },
        "entry_points": {
          "type": "array",
          "items": {
            "$ref": "#/$defs/EntryPoint"
          }
        },
        "config": {
          "$ref": "#/$defs/BotConfig"
        }
      }
    },
    "filters": {
      "type": "object",
      "properties": {
        "ALL": {
          "$ref": "#/$defs/filters/$defs/All"
        },
        "ANIMATiON": {
          "$ref": "#/$defs/filters/$defs/Animation"
        },
        "ATTACHMENT": {
          "$ref": "#/$defs/filters/$defs/Attachment"
        },
        "AUDIO": {
          "$ref": "#/$defs/filters/$defs/Audio"
        },
        "CAPTION": {
          "$ref": "#/$defs/filters/$defs/Caption"
        },
        "CHAT": {
          "$ref": "#/$defs/filters/$defs/Chat"
        },
        "COMMAND": {
          "$ref": "#/$defs/filters/$defs/Command"
        },
        "CONTACT": {
          "$ref": "#/$defs/filters/$defs/Contact"
        },
        "FORWARDED": {
          "$ref": "#/$defs/filters/$defs/Forwarded"
        },
        "GAME": {
          "$ref": "#/$defs/filters/$defs/Game"
        },
        "HAS_MEDIA_SPOILER": {
          "$ref": "#/$defs/filters/$defs/Has_Media_Spoiler"
        },
        "HAS_PROTECTED_CONTENT": {
          "$ref": "#/$defs/filters/$defs/Has_Protected_Content"
        },
        "INVOiCE": {
          "$ref": "#/$defs/filters/$defs/Invoice"
        },
        "IS_AUTOMATIC_FORWARD": {
          "$ref": "#/$defs/filters/$defs/Is_Automatic_Forward"
        },
        "IS_TOPIC_MESSAGE": {
          "$ref": "#/$defs/filters/$defs/Is_Topic_Message"
        },
        "LOCATION": {
          "$ref": "#/$defs/filters/$defs/Location"
        },
        "PASSPORT_DATA": {
          "$ref": "#/$defs/filters/$defs/Passport_Data"
        },
        "PHOTO": {
          "$ref": "#/$defs/filters/$defs/Photo"
        },
        "POLL": {
          "$ref": "#/$defs/filters/$defs/Poll"
        },
        "REPLY": {
          "$ref": "#/$defs/filters/$defs/Reply"
        },
        "SUCCESSFUL_PAYMENT": {
          "$ref": "#/$defs/filters/$defs/Successful_Payment"
        },
        "TEXT": {
          "$ref": "#/$defs/filters/$defs/Text"
        },
        "USER": {
          "$ref": "#/$defs/filters/$defs/User"
        },
        "USER_ATTACHMENT": {
          "$ref": "#/$defs/filters/$defs/User_Attachment"
        },
        "PREMIUM_USER": {
          "$ref": "#/$defs/filters/$defs/Premium_User"
        },
        "VENUE": {
          "$ref": "#/$defs/filters/$defs/Venue"
        },
        "VIA_BOT": {
          "$ref": "#/$defs/filters/$defs/Via_Bot"
        },
        "VIDEO": {
          "$ref": "#/$defs/filters/$defs/Video"
        },
        "VIDEO_NOTE": {
          "$ref": "#/$defs/filters/$defs/Video_Note"
        },
        "VOICE": {
          "$ref": "#/$defs/filters/$defs/Voice"
        }
      },
      "$defs": {
        "BaseFilter": {
          "type": "object",
          "extends": [
            "#/$defs/TelebotInstance"
          ],
          "abstract": true
        },
        "MessageFilter": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/BaseFilter"
          ],
          "required": [
            "filter_type"
          ],
          "properties": {
            "filter_type": {
              "type": "string",
              "enum": [
                "all",
                "text",
                "caption",
                "command",
                "regex",
                "caption_regex",
                "reply",
                "audio",
                "document",
                "animation",
                "photo",
                "sticker",
                "video",
                "voice",
                "video_note",
                "contact",
                "location",
                "venue",
                "status_update",
                "forwarded",
                "game",
                "entity",
                "caption_entity",
                "private",
                "group",
                "chat_type",
                "user",
                "is_automatic_forward",
                "has_protected_content",
                "invoice",
                "successful_payment",
                "passport_data",
                "poll",
                "dice",
                "language",
                "attachment",
                "update"
              ]
            },
            "call_back_method": {
              "type": "importable"
            },
            "callback": {
              "type": "string"
            }
          }
        },
        "UpdateFilter": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/BaseFilter"
          ]
        },
        "InvertedFilter": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/UpdateFilter"
          ]
        },
        "MergedFilter": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/UpdateFilter"
          ]
        },
        "XORFilter": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/UpdateFilter"
          ]
        },
        "CustomFilter": {
          "type": "object",
          "extends": [
            "https://numengo.org/ngoschema#/$defs/instances/$defs/Instance"
          ],
          "primaryKeys": [
            "symbol"
          ],
          "properties": {
            "symbol": {
              "type": "string"
            },
            "key": {
              "type": "string",
              "enum": [
                "text",
                "text_contains",
                "text_startswith",
                "chat_id",
                "is_forwarded",
                "is_reply",
                "language_code",
                "is_chat_admin",
                "state",
                "is_digit"
              ]
            },
            "return": {
              "type": "string"
            }
          }
        },
        "All": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "all"
        },
        "Animation": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "animation"
        },
        "Attachment": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "attachment"
        },
        "Audio": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "audio"
        },
        "Caption": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "caption"
        },
        "Chat": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "chat"
        },
        "Command": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "command"
        },
        "Contact": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "contact"
        },
        "Forwarded": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "forwarded"
        },
        "Game": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "game"
        },
        "Has_Media_Spoiler": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "has_media_spoiler"
        },
        "Has_Protected_Content": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "has_protected_content"
        },
        "Invoice": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "invoice"
        },
        "Is_Automatic_Forward": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "is_automatic_forward"
        },
        "Is_Topic_Message": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "is_topic_message"
        },
        "Location": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "location"
        },
        "Passport_Data": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "passport_data"
        },
        "Photo": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "photo"
        },
        "Poll": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "poll"
        },
        "Reply": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "reply"
        },
        "Successful_Payment": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "successful_payment"
        },
        "Text": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "text"
        },
        "User": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "user"
        },
        "User_Attachment": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "user_attachment"
        },
        "Premium_User": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "premium_user"
        },
        "Venue": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "venue"
        },
        "Via_Bot": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "via_bot"
        },
        "Video": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "video"
        },
        "Video_Note": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "video_note"
        },
        "Voice": {
          "type": "object",
          "extends": [
            "#/$defs/filters/$defs/MessageFilter"
          ],
          "filter_type": "voice"
        },
        "MagicFilter": {
          "type": "object",
          "properties": {
            "text": {
              "type": "string"
            },
            "from_user": {
              "type": "string"
            },
            "data": {
              "type": "string"
            },
            "chat": {
              "type": "string"
            },
            "content_type": {
              "type": "string"
            }
          }
        }
      }
    },
    "handlers": {
      "type": "object",
      "$defs": {
        "Handler": {
          "type": "object",
          "extends": [
            "#/$defs/TelebotInstance"
          ],
          "required": [
            "callback",
            "block"
          ],
          "properties": {
            "callback": {
              "type": "string"
            },
            "block": {
              "type": "boolean"
            },
            "check_update": {
              "type": "boolean"
            },
            "_type": {
              "type": "string"
            }
          }
        },
        "InlineQueryHandler": {
          "type": "object",
          "description": "This object represents an incoming inline query. When the user sends an empty query, your bot could return some default or trending results.",
          "extends": [
            "#/$defs/handlers/$defs/Handler"
          ],
          "_type": "InlineQueryHandler",
          "properties": {
            "pattern": {
              "type": "string"
            },
            "chat_types": {
              "type": "array"
            }
          }
        },
        "CommandHandler": {
          "type": "object",
          "description": "Commands are Telegram messages that start with /, optionally followed by an @ and the bot’s name and/or some additional text. The handler will add a list to the CallbackContext named CallbackContext.args. It will contain a list of strings, which is the text following the command split on single or consecutive whitespace characters",
          "extends": [
            "#/$defs/handlers/$defs/Handler"
          ],
          "_type": "CommandHandler",
          "properties": {
            "command": {
              "type": "string"
            },
            "filters_expr": {
              "type": "string"
            },
            "filters": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/filters/$defs/BaseFilter"
              }
            },
            "block": {
              "type": "boolean"
            },
            "has_args": {
              "type": "boolean"
            },
            "check_update": {
              "type": "boolean"
            }
          }
        },
        "MessageHandler": {
          "type": "object",
          "description": "Handler class to handle telegram messages. They might contain text, media or status updates.",
          "extends": [
            "#/$defs/handlers/$defs/Handler"
          ],
          "_type": "MessageHandler",
          "properties": {
            "filters_expr": {
              "type": "string"
            },
            "filters": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/filters/$defs/BaseFilter"
              }
            },
            "block": {
              "type": "boolean"
            }
          }
        },
        "CallbackQueryHandler": {
          "type": "object",
          "extends": [
            "#/$defs/handlers/$defs/Handler"
          ],
          "_type": "CallbackQueryHandler",
          "properties": {
            "pattern": true
          }
        },
        "ConversationHandler": {
          "type": "object",
          "description": "A handler to hold a conversation with a single or multiple users through Telegram updates by managing four collections of other handlers.\n\nThe first collection, a ``list`` named :attr:`entry_points`, is used to initiate the conversation, for example with a :class:`telegram.ext.CommandHandler` or :class:`telegram.ext.MessageHandler`.\n\nThe second collection, a ``dict`` named :attr:`states`, contains the different conversation steps and one or more associated handlers that should be used if the user sends a message when the conversation with them is currently in that state. Here you can also define a state for `TIMEOUT` to define the behavior where `conversation_timeout` is exceeded, and a state for`WAITING` to define behavior when a new update is received while the previous ``@run_async`` decorated handler is not finished.\n\nThe third collection, a ``list`` named :attr:`fallbacks`, is used if the user is currently in a conversation but the state has either no associated handler or the handler that is associated to the state is inappropriate for the update, for example if the update contains a command, but a regular text message is expected. You could use this for a ``/cancel`` command or to let the user know their message was not recognized.\n\nTo change the state of conversation, the callback function of a handler must return the new state after responding to the user. If it does not return anything (returning :obj:`None` by default), the state will not change. If an entry point callback function returns :obj:`None`, the conversation ends immediately after the execution of this callback function.\nTo end the conversation, the callback function must return :attr:`END` or ``-1``. To handle the conversation timeout, use handler :attr:`TIMEOUT` or ``-2``.\nFinally, :class:`telegram.ext.DispatcherHandlerStop` can be used in conversations as described in the corresponding documentation.\n\nNote:\nIn each of the described collections of handlers, a handler may in turn be a `ConversationHandler`. In that case, the nested :class:`ConversationHandler` should have the attribute :attr:`map_to_parent` which allows to return to the parent conversation at specified states within the nested conversation.\n\nNote that the keys in :attr:`map_to_parent` must not appear as keys in :attr:`states` attribute or else the latter will be ignored. You may map :attr:`END` to one of the parents states to continue the parent conversation after this has ended or even map a state to :attr:`END` to end the *parent* conversation from within the nested one. For an example on nested :class:`ConversationHandler` s, see our `examples`_.",
          "extends": [
            "#/$defs/handlers/$defs/Handler"
          ],
          "_type": "ConversationHandler",
          "properties": {
            "entry_points": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/handlers/$defs/Handler"
              }
            },
            "states": {
              "type": "object",
              "additionalProperties": {
                "type": "array"
              }
            },
            "fallbacks": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/handlers/$defs/Handler"
              }
            },
            "allow_reentry": {
              "type": "boolean"
            },
            "per_chat": {
              "type": "boolean"
            },
            "per_user": {
              "type": "boolean"
            },
            "per_message": {
              "type": "boolean"
            },
            "conversation_timeout": {
              "type": "integer"
            },
            "name": {
              "type": "string"
            },
            "persistent": {
              "type": "boolean"
            },
            "map_to_parent": {
              "type": "object",
              "additionalProperties": true
            }
          }
        },
        "ChatMemberHandler": {
          "type": "object",
          "description": "Handler class to handle Telegram updates that contain a chat member update.",
          "extends": [
            "#/$defs/handlers/$defs/Handler"
          ],
          "_type": "ChatMemberHandler",
          "properties": {
            "chat_member_types": {
              "type": "string",
              "enum": [
                "MY_CHAT_MEMBER",
                "CHAT_MEMBER",
                "ANY_CHAT_MEMBER"
              ]
            }
          }
        }
      }
    },
    "actions": {
      "type": "object",
      "$defs": {
        "Action": {
          "type": "object",
          "extends": [
            "#/$defs/TelebotInstance"
          ],
          "abstract": true,
          "dependencies": {
            "label": [
              "name"
            ],
            "returns": [
              "label"
            ]
          },
          "primaryKeys": [
            "name"
          ],
          "properties": {
            "routeur": {
              "type": "string",
              "description": "routeur name"
            },
            "triggers": {
              "$ref": "#/$defs/Triggers"
            },
            "decorators": {
              "type": "array"
            },
            "arguments": {
              "type": "array"
            },
            "help": {
              "type": "string"
            },
            "example": {
              "type": "string"
            }
          }
        },
        "Message": {
          "type": "object",
          "extends": [
            "#/$defs/actions/$defs/Action"
          ],
          "properties": {
            "parse_mode": {
              "type": "string",
              "enum": [
                "",
                "MarkdownV2",
                "Markdown",
                "HTML"
              ]
            }
          }
        },
        "Command": {
          "type": "object",
          "extends": [
            "#/$defs/actions/$defs/Message"
          ],
          "dependencies": {
            "command": [
              "name"
            ]
          },
          "properties": {
            "command": {
              "type": "gettext",
              "default": "{{this.name}}"
            }
          }
        }
      }
    },
    "dialog": {
      "type": "object",
      "$defs": {
        "Window": {
          "type": "object",
          "extends": [
            "#/$defs/TelebotInstance"
          ],
          "additionalProperties": {
            "type": "string"
          },
          "notSerialized": [
            "all_callbacks",
            "message_handler",
            "state",
            "getter",
            "on_process_result",
            "markup_factory",
            "preview_add_transitions",
            "preview_data"
          ],
          "properties": {
            "widgets": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/dialog/$defs/widgets/$defs/Widget"
              }
            },
            "callbacks": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/dialog/$defs/callables/$defs/Callback"
              }
            },
            "message_handler": true,
            "state": true,
            "getter": true,
            "on_process_result": true,
            "markup_factory": true,
            "parse_mode": {
              "type": "string"
            },
            "disable_web_page_preview": {
              "type": "boolean"
            },
            "preview_add_transitions": true,
            "preview_data": true
          }
        },
        "Dialog": {
          "type": "object",
          "extends": [
            "#/$defs/TelebotInstance"
          ],
          "additionalProperties": {
            "type": "string"
          },
          "properties": {
            "windows": {
              "type": "array",
              "items": {
                "$ref": "#/$defs/dialog/$defs/Window"
              }
            },
            "on_start": true,
            "on_close": true,
            "on_process_result": true,
            "launch_mode": {
              "$ref": "#/$defs/Enums/properties/dialog_launch_mode"
            },
            "getter": true,
            "preview_data": true
          }
        },
        "widgets": {
          "type": "object",
          "$defs": {
            "Widget": {
              "type": "object",
              "extends": [
                "#/$defs/TelebotInstance"
              ],
              "abstract": true,
              "properties": {
                "_type": {
                  "type": "string"
                },
                "when": true,
                "callbacks": {
                  "type": "array",
                  "items": {
                    "$ref": "#/$defs/dialog/$defs/callables/$defs/Callback"
                  }
                }
              }
            },
            "texts": {
              "type": "object",
              "$defs": {
                "TextWidget": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/Widget"
                  ],
                  "abstract": true,
                  "properties": {
                    "_type": {
                      "$ref": "#/$defs/Enums/properties/text_widget_types"
                    }
                  }
                },
                "Const": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                  ],
                  "_type": "const",
                  "properties": {
                    "text": {
                      "type": "string"
                    }
                  }
                },
                "Format": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                  ],
                  "_type": "format",
                  "properties": {
                    "text": {
                      "type": "string"
                    }
                  }
                },
                "I18NFormat": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/Format"
                  ],
                  "_type": "i18n_format"
                },
                "Multi": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                  ],
                  "additionalProperties": {
                    "type": "string"
                  },
                  "_type": "multi",
                  "properties": {
                    "texts": {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                      }
                    },
                    "sep": {
                      "type": "string"
                    }
                  }
                },
                "Case": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                  ],
                  "_type": "case",
                  "properties": {
                    "texts": {
                      "type": "object"
                    },
                    "selector": true
                  }
                },
                "Progress": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                  ],
                  "required": [
                    "state_name"
                  ],
                  "_type": "progress",
                  "properties": {
                    "field": {
                      "type": "string"
                    },
                    "width": {
                      "type": "string",
                      "default": 10
                    }
                  }
                },
                "List": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                  ],
                  "additionalProperties": {
                    "type": "string"
                  },
                  "aliases": {
                    "items": "items_"
                  },
                  "_type": "list",
                  "properties": {
                    "field": {
                      "$ref": "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                    },
                    "items_": {
                      "type": "array"
                    },
                    "items_getter": true,
                    "items_mfilter": {
                      "type": "string"
                    },
                    "sep": {
                      "type": "string",
                      "default": "\\n"
                    },
                    "id": {
                      "type": "string"
                    },
                    "page_size": {
                      "type": "string"
                    },
                    "on_page_changed": true
                  }
                },
                "Jinja": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                  ],
                  "_type": "jinja",
                  "properties": {
                    "template_text": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "keyboards": {
              "type": "object",
              "$defs": {
                "KeyboardWidget": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/Widget"
                  ],
                  "abstract": true,
                  "properties": {
                    "text": {
                      "$ref": "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                    },
                    "id": true,
                    "on_click": true,
                    "when": true
                  }
                },
                "Button": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/KeyboardWidget"
                  ],
                  "_type": "button"
                },
                "Url": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/KeyboardWidget"
                  ],
                  "_type": "url",
                  "properties": {
                    "text": {
                      "$ref": "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                    },
                    "url": {
                      "$ref": "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                    }
                  }
                },
                "WebApp": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/Url"
                  ],
                  "_type": "web_app"
                },
                "SwitchInlineQuery": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/KeyboardWidget"
                  ],
                  "_type": "switchInline_query",
                  "properties": {
                    "text": {
                      "$ref": "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                    },
                    "switch_inline_query": {
                      "$ref": "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                    }
                  }
                },
                "Group": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/KeyboardWidget"
                  ],
                  "additionalProperties": {
                    "type": "string"
                  },
                  "_type": "group",
                  "properties": {
                    "buttons": {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/KeyboardWidget"
                      }
                    },
                    "width": {
                      "type": "string"
                    }
                  }
                },
                "Row": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/Group"
                  ],
                  "_type": "row"
                },
                "Column": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/Group"
                  ],
                  "_type": "column"
                },
                "ScrollingGroup": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/Group"
                  ],
                  "_type": "scrolling_group",
                  "properties": {
                    "width": {
                      "type": "string"
                    },
                    "height": {
                      "type": "string"
                    },
                    "on_page_changed": true,
                    "hide_on_single_page": {
                      "type": "boolean"
                    },
                    "hide_pager": {
                      "type": "boolean"
                    }
                  }
                },
                "ListGroup": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/KeyboardWidget"
                  ],
                  "_type": "list_group",
                  "properties": {
                    "buttons": {
                      "type": "array",
                      "items": {
                        "$ref": "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/KeyboardWidget"
                      }
                    },
                    "items_": true,
                    "id": {
                      "type": "string"
                    },
                    "items_getter": true,
                    "items_mfilter": {
                      "type": "string"
                    },
                    "item_id_getter": true
                  }
                },
                "Checkbox": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/KeyboardWidget"
                  ],
                  "_type": "checkbox",
                  "properties": {
                    "checked_text": {
                      "type": "string"
                    },
                    "unchecked_text": {
                      "type": "string"
                    },
                    "on_state_changed": true,
                    "default": {
                      "type": "boolean"
                    }
                  }
                },
                "Select": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/KeyboardWidget"
                  ],
                  "_type": "select",
                  "properties": {
                    "item_id_getter": true,
                    "items_": true,
                    "type_factory": true
                  }
                },
                "Radio": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/KeyboardWidget"
                  ],
                  "_type": "radio",
                  "properties": {
                    "checked_text": {
                      "type": "string"
                    },
                    "unchecked_text": {
                      "type": "string"
                    },
                    "item_id_getter": true,
                    "items_": true,
                    "on_state_changed": true
                  }
                },
                "Multiselect": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/Select"
                  ],
                  "_type": "multiselect",
                  "properties": {
                    "checked_text": {
                      "type": "string"
                    },
                    "unchecked_text": {
                      "type": "string"
                    },
                    "items_": true,
                    "min_selected": {
                      "type": "string"
                    },
                    "max_selected": {
                      "type": "string"
                    },
                    "type_factory": true,
                    "on_state_changed": true
                  }
                },
                "Calendar": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/KeyboardWidget"
                  ],
                  "$defs": {
                    "CalendarConfig": {
                      "type": "object",
                      "properties": {
                        "firstweekday": {
                          "type": "string"
                        },
                        "timezone": {
                          "type": "string"
                        },
                        "min_date": {
                          "type": "date"
                        },
                        "max_date": {
                          "type": "date"
                        },
                        "month_columns": {
                          "type": "string",
                          "default": 3
                        },
                        "years_per_page": {
                          "type": "string",
                          "default": 20
                        },
                        "years_columns": {
                          "type": "string",
                          "default": 5
                        }
                      }
                    }
                  },
                  "_type": "calendar",
                  "properties": {
                    "config": {
                      "$ref": "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/Calendar/$defs/CalendarConfig"
                    }
                  }
                },
                "Counter": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/KeyboardWidget"
                  ],
                  "required": [
                    "id"
                  ],
                  "_type": "counter",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "plus": {
                      "$ref": "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                    },
                    "minus": {
                      "$ref": "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                    },
                    "text": {
                      "$ref": "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                    },
                    "min_value": {
                      "type": "integer"
                    },
                    "max_value": {
                      "type": "integer",
                      "default": 999999
                    },
                    "increment": {
                      "type": "integer",
                      "default": 1
                    },
                    "default": {
                      "type": "integer",
                      "default": 1
                    },
                    "cycle": {
                      "type": "boolean"
                    },
                    "on_click": true,
                    "on_text_click": true,
                    "on_value_changed": true
                  }
                },
                "SwitchTo": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/KeyboardWidget"
                  ],
                  "notSerialized": [
                    "state"
                  ],
                  "notValidated": [
                    "state"
                  ],
                  "_type": "switch_to",
                  "properties": {
                    "text": {
                      "$ref": "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                    },
                    "id": {
                      "type": "string"
                    },
                    "state": true,
                    "on_click": true,
                    "when": true
                  }
                },
                "Next": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/KeyboardWidget"
                  ],
                  "_type": "next",
                  "properties": {
                    "text": {
                      "$ref": "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                    },
                    "id": {
                      "type": "string"
                    },
                    "on_click": true,
                    "when": true
                  }
                },
                "Back": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/KeyboardWidget"
                  ],
                  "_type": "back",
                  "properties": {
                    "text": {
                      "$ref": "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                    },
                    "id": {
                      "type": "string"
                    },
                    "on_click": true,
                    "when": true
                  }
                },
                "Start": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/KeyboardWidget"
                  ],
                  "notSerialized": [
                    "state"
                  ],
                  "notValidated": [
                    "state"
                  ],
                  "_type": "start",
                  "properties": {
                    "text": {
                      "$ref": "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                    },
                    "id": {
                      "type": "string"
                    },
                    "state": true,
                    "data": true,
                    "on_click": true,
                    "mode": {
                      "$ref": "#/$defs/Enums/properties/dialog_start_mode"
                    },
                    "when": true
                  }
                },
                "Cancel": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/keyboards/$defs/KeyboardWidget"
                  ],
                  "_type": "cancel",
                  "properties": {
                    "text": {
                      "$ref": "#/$defs/dialog/$defs/widgets/$defs/texts/$defs/TextWidget"
                    },
                    "id": {
                      "type": "string"
                    },
                    "result": true,
                    "on_click": true,
                    "when": true
                  }
                }
              }
            },
            "input": {
              "type": "object",
              "$defs": {
                "InputWidget": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/Widget"
                  ],
                  "abstract": true,
                  "properties": {
                    "_type": {
                      "$ref": "#/$defs/Enums/properties/input_widget_types"
                    }
                  }
                },
                "MessageInput": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/input/$defs/InputWidget"
                  ],
                  "_type": "message_input"
                },
                "TextInput": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/input/$defs/InputWidget"
                  ],
                  "_type": "text_input",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "type_factory": true,
                    "on_success": true,
                    "on_error": true,
                    "filter": {
                      "type": "string"
                    }
                  }
                }
              }
            },
            "media": {
              "type": "object",
              "$defs": {
                "MediaWidget": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/Widget"
                  ],
                  "abstract": true,
                  "properties": {
                    "_type": {
                      "$ref": "#/$defs/Enums/properties/media_widget_types"
                    }
                  }
                },
                "StaticMedia": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/media/$defs/MediaWidget"
                  ],
                  "_type": "static_media",
                  "properties": {
                    "path": true,
                    "url": true,
                    "type": {
                      "$ref": "#/$defs/Enums/properties/content_type_media"
                    },
                    "use_pipe": {
                      "type": "boolean"
                    },
                    "media_params": {
                      "type": "object"
                    },
                    "when": true
                  }
                },
                "DynamicMedia": {
                  "type": "object",
                  "extends": [
                    "#/$defs/dialog/$defs/widgets/$defs/media/$defs/MediaWidget"
                  ],
                  "_type": "dynamic_media",
                  "properties": {
                    "media_item": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "callables": {
          "type": "object",
          "$defs": {
            "Callback": {
              "type": "object",
              "extends": [
                "#/$defs/TelebotInstance"
              ],
              "is_async": true
            },
            "DataGetter": {
              "type": "object",
              "extends": [
                "#/$defs/dialog/$defs/callables/$defs/Callback"
              ],
              "properties": {
                "local_data": {
                  "type": "object"
                },
                "dialog_data": {
                  "type": "object"
                },
                "middleware_data": {
                  "type": "object"
                },
                "start_data": {
                  "type": "object"
                },
                "choices": {
                  "type": "array"
                }
              }
            }
          }
        }
      }
    }
  }
}